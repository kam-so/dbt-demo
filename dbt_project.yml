###################
# Project info
###################
name: 'disw'
version: '1.0.0'
config-version: 2
profile: 'default'

################
# path config
################
source-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
data-paths: ["data"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]
target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
    - "target"
    - "dbt_modules"

vars:
    # schema variables
    lnd_schema: "LANDING"
    stg_schema: "STAGING"
    wh_schema:  "WAREHOUSE"

    # incremental load variables
    src_segment_tbl: "RAW_SEGMENT_IDENTIFY_T"
    segment_identify_key: "load_id"

############
# run hooks
############
on-run-start: 
    - "{{ create_schemas() }}"
    - "{{ create_sequence() }}"
    - "{{ create_user() }}"
    - "{{ grant_privilege() }}"
on-run-end:

################
# model config
################
models:
  pre-hook: "{{ logging.log_model_start_event() }}"
  post-hook: "{{ logging.log_model_end_event() }}"
  disw:
    landing:
        +transient: false
        +materialized: table
        +database: "{{ env_var('DBT_SNOW_LANDING_DB') }}"
        +schema: landing
    staging:
        +transient: false
        +materialized: table
        +database: "{{ env_var('DBT_SNOWFLAKE_DB') }}"
        +schema: staging
    warehouse:
        +transient: false
        +materialized: table
        +database: "{{ env_var('DBT_SNOWFLAKE_DB') }}"
        +schema: warehouse
